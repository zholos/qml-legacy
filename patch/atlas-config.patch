--- ATLAS/CONFIG/src/probe_comp.c
+++ ATLAS/CONFIG/src/probe_comp.c
@@ -612,7 +612,7 @@
  * If on Win64, build MinGW compiler wrappers.
  * Look in /usr/bin/ for standard cygwin names for the cygwin compilers
  */
-   if (OS == OSWinNT && ptrbits == 64)
+   if (0) /* Too confusing. The Cygwin packages understand Cygwin paths. */
    {
       int fndit;
 /*
@@ -699,13 +699,16 @@
  *    If the user has not specified the compiler, look through all available
  *    compilers with one that works (with user flags, if specified)
  */
-      if (!usrcomps[i])
+      if (1) /* Always look through list to find best flags. */
       {
          for (p=comps[i]; p; p = p->next)
          {
             flg = NewStringCopy(usrcomps[NCOMP+i]?usrcomps[NCOMP+i]:p->flags);
             if (usrcomps[NCOMP*2+i])
                flg = NewAppendedString(flg, usrcomps[NCOMP*2+i]);
+            if (usrcomps[i])
+                sp = usrcomps[i];
+            else
             sp = GetWinComp(OS, p->comp);
             if (!sp)
             {
@@ -728,7 +731,7 @@
                else
                   sp = p->comp;
             }
-            if (ptrbits)
+            if (ptrbits && i != XCC_) /* Whatever XCC defaults to is fine. */
             {
                if (OS == OSWinNT && ptrbits == 64 && i == XCC_)
                   flg = NewAppendedString(flg, "-m32");
@@ -746,6 +749,7 @@
             CompError(i);
          else
             free(flg);
+         if (!usrcomps[i])
          usrcomps[i] = (mgwd) ? sp : p->comp;
          p->comp = NULL;                /* so it isn't deleted by Kill */
          if (!usrcomps[NCOMP+i])
@@ -811,7 +815,7 @@
       flg = NewStringCopy(usrcomps[NCOMP+i]?usrcomps[NCOMP+i]:p->flags);
       if (usrcomps[NCOMP*2+i])
          flg = NewAppendedString(flg, usrcomps[NCOMP*2+i]);
-      if (ptrbits)
+      if (ptrbits && i != XCC_)
       {
          if (OS == OSWinNT && ptrbits == 64 && i == XCC_)
             flg = NewAppendedString(flg, "-m32");
@@ -847,7 +851,7 @@
  */
    if (ptrbits && arch != IA64Itan && arch != IA64Itan2)
    {
-      for (i=0; i < NCOMP; i++)
+      for (i=0; i < NCOMP; i++) if (i != XCC_)
       {
          sp = GetPtrbitsFlag(OS, arch, ptrbits, usrcomps[i]);
          if (OS == OSWinNT && ptrbits == 64 && i == XCC_)

--- ATLAS/CONFIG/src/SpewMakeInc.c
+++ ATLAS/CONFIG/src/SpewMakeInc.c
@@ -675,8 +675,7 @@
    {
       if (i == XCC_) continue;  /* do not accept cross-compiler */
       j = strlen(comps[i]);
-      if (j >= 3 && comps[i][j-3] == 'g' &&
-          comps[i][j-2] == 'c' && comps[i][j-1] == 'c')
+      if (i == ICC_)
          break;
    }
    goodgcc = (i < NCOMP) ? comps[i] : "gcc";

--- ATLAS/CONFIG/src/atlconf_misc.c
+++ ATLAS/CONFIG/src/atlconf_misc.c
@@ -686,6 +686,7 @@
  *    version line.  Don't want to search for just "gcc", since that will
  *    match with pgcc
  */
+      return 1; /* We only use GCC. */
       if (strstr(res, "(GCC)") || strstr(res, " GCC ") ||
           strstr(res, "GNU Fortran") || strstr(res, "(GCC ") ||
           (res[0] == 'g' && res[1] == 'c' && res[2] == 'c' && res[3] == ' ')

--- ATLAS/CONFIG/src/probe_OS.c
+++ ATLAS/CONFIG/src/probe_OS.c
@@ -32,7 +32,7 @@
       else if(strstr(ln, "IRIX")) OS = OSIRIX;
       else if(strstr(ln, "AIX")) OS = OSAIX;
       else if(strstr(ln, "Interix")) OS = OSWinSFU;
-      else if(strstr(ln, "WIN"))
+      else if(strstr(ln, "WIN") || strstr(ln, "MINGW"))
       {
          if (strstr(ln, "95") || strstr(ln, "98") || strstr(ln, "_ME"))
             OS = OSWin9x;

--- ATLAS/tune/sysinfo/emit_buildinfo.c
+++ ATLAS/tune/sysinfo/emit_buildinfo.c
@@ -31,6 +31,7 @@
 #include <stdlib.h>
 #include <string.h>
 #include <assert.h>
+#include <ctype.h>
 #define LNLEN 2048
 static char ARCHDEFS[LNLEN], ARCH[LNLEN], DKCFLAGS[LNLEN], DKC[LNLEN],
             DMCFLAGS[LNLEN], DMC[LNLEN], F2CDEFS[LNLEN], F77FLAGS[LNLEN],
@@ -76,7 +77,7 @@
          ln[i] = ' ';
    }
 
-   for (i--; i >= 0 && (ln[i] == ' ' || ln[i] == '\n' || ln[i] == '\t'); i--)
+   for (i--; i >= 0 && isspace(ln[i]); i--) /* Including '\r' */
       ln[i] = '\0';
 }
 

--- ATLAS/makes/Make.sysinfo
+++ ATLAS/makes/Make.sysinfo
@@ -79,8 +79,11 @@
 RunMulAdd: xmasearch
 	./xmasearch $(pre) $(maxlat) $(mflop)
 
+# xemit_lamch is compiled by MinGW (ICC) and so doesn't understand Cygwin paths
 RunLamch : xemit_lamch
-	$(ATLRUN) $(SYSdir) xemit_lamch $(INCAdir)
+	mkdir -p $(SYSdir)/_include
+	$(ATLRUN) $(SYSdir) xemit_lamch _include
+	cp $(SYSdir)/_include/* $(INCAdir)
 RunTyp: xemit_typ
	$(ATLRUN) $(SYSdir) xemit_typ > $(INCAdir)/atlas_type.h
 

--- ATLAS/makes/Make.r1tune
+++ ATLAS/makes/Make.r1tune
@@ -100,11 +100,14 @@
 	cd $(BLDdir)/src/blas/reference/level2 ; make slib
 	cd $(GR1dir) ; make slib
 	$(MAKE) xss1nxtune
+	mkdir -p $(R1Tdir)/_include
 	$(ATLRUN) $(R1Tdir) xss1nxtune -U u -n 2000 -r 1 -s 10 -C 0 \
-                  -o $(INCAdir)/atlas_ssyrNX.h
+                  -o _include/atlas_ssyrNX.h
+	cp $(R1Tdir)/_include/atlas_ssyrNX.h $(INCAdir)
 	$(MAKE) xss2nxtune
 	$(ATLRUN) $(R1Tdir) xss2nxtune -U u -n 2000 -r 1 -s 10 -C 0 \
-                  -o $(INCAdir)/atlas_ssyr2NX.h
+                  -o _include/atlas_ssyr2NX.h
+	cp $(R1Tdir)/_include/atlas_ssyr2NX.h $(INCAdir)
 	cd $(L2Bdir) ; make slib
 #
 # This target is for directly timing a call to the kernel, w/o cache flushing
@@ -349,11 +352,14 @@
 	cd $(BLDdir)/src/blas/reference/level2 ; make dlib
 	cd $(GR1dir) ; make dlib
 	$(MAKE) xds1nxtune
+	mkdir -p $(R1Tdir)/_include
 	$(ATLRUN) $(R1Tdir) xds1nxtune -U u -n 2000 -r 1 -s 10 -C 0 \
-                  -o $(INCAdir)/atlas_dsyrNX.h
+                  -o _include/atlas_dsyrNX.h
+	cp $(R1Tdir)/_include/atlas_dsyrNX.h $(INCAdir)
 	$(MAKE) xds2nxtune
 	$(ATLRUN) $(R1Tdir) xds2nxtune -U u -n 2000 -r 1 -s 10 -C 0 \
-                  -o $(INCAdir)/atlas_dsyr2NX.h
+                  -o _include/atlas_dsyr2NX.h
+	cp $(R1Tdir)/_include/atlas_dsyr2NX.h $(INCAdir)
 	cd $(L2Bdir) ; make dlib
 #
 # This target is for directly timing a call to the kernel, w/o cache flushing

--- ATLAS/makes/Make.r1tune
+++ ATLAS/makes/Make.r1tune
@@ -150,5 +150,5 @@
 sr2time : sr2time.o xr2hgen
 	rm -f $(sr2obj) ATL_sger2.c atlas_sr2.h r2h.bak
-	- mv $(INCAdir)/atlas_sr2.h rr2.bak
+	- mv $(INCAdir)/atlas_sr2.h r2h.bak
 	./xr2hgen -p s -l $(l1mul) -m $(mu) -n $(nu) -f $(iflag)
 	cp -f $(R2Kdir)/$(r2rout) ATL_sger2k.c
@@ -402,5 +402,5 @@
 dr2time : dr2time.o xr2hgen
 	rm -f $(dr2obj) ATL_dger2.c atlas_dr2.h r2h.bak
-	- mv $(INCAdir)/atlas_dr2.h rr2.bak
+	- mv $(INCAdir)/atlas_dr2.h r2h.bak
 	./xr2hgen -p d -l $(l1mul) -m $(mu) -n $(nu) -f $(iflag)
 	cp -f $(R2Kdir)/$(r2rout) ATL_dger2k.c
@@ -659,5 +659,5 @@
 cr2time : cr2time.o xr2hgen
 	rm -f $(cr2obj) ATL_cger2.c atlas_cr2.h r2h.bak
-	- mv $(INCAdir)/atlas_cr2.h rr2.bak
+	- mv $(INCAdir)/atlas_cr2.h r2h.bak
 	./xr2hgen -p c -l $(l1mul) -m $(mu) -n $(nu) -f $(iflag)
 	cp -f $(R2Kdir)/$(r2rout) ATL_cger2k.c
@@ -934,5 +934,5 @@
 zr2time : zr2time.o xr2hgen
 	rm -f $(zr2obj) ATL_zger2.c atlas_zr2.h r2h.bak
-	- mv $(INCAdir)/atlas_zr2.h rr2.bak
+	- mv $(INCAdir)/atlas_zr2.h r2h.bak
 	./xr2hgen -p z -l $(l1mul) -m $(mu) -n $(nu) -f $(iflag)
 	cp -f $(R2Kdir)/$(r2rout) ATL_zger2k.c

--- ATLAS/makes/Make.mvtune
+++ ATLAS/makes/Make.mvtune
@@ -155,5 +155,5 @@
 smvntime : smvntime.o xmvnhgen
 	- rm -f $(smvntobj) ATL_smvnk.c atlas_smvn.h mvnh.bak ATL_sgemvN.o
-	- mv $(INCAdir)/atlas_smvn.h rmvn.bak
+	- mv $(INCAdir)/atlas_smvn.h mvnh.bak
 	./xmvnhgen -p s -l $(l1mul) -m $(mu) -n $(nu) -f $(iflag) $(ntlb)
 	cp -f $(MVNKdir)/$(mvnrout) ATL_smvnk.c
@@ -444,5 +444,5 @@
 dmvntime : dmvntime.o xmvnhgen
 	- rm -f $(dmvntobj) ATL_dmvnk.c atlas_dmvn.h mvnh.bak ATL_dgemvN.o
-	- mv $(INCAdir)/atlas_dmvn.h rmvn.bak
+	- mv $(INCAdir)/atlas_dmvn.h mvnh.bak
 	./xmvnhgen -p d -l $(l1mul) -m $(mu) -n $(nu) -f $(iflag) $(ntlb)
 	cp -f $(MVNKdir)/$(mvnrout) ATL_dmvnk.c
@@ -745,5 +745,5 @@
 cmvntime : cmvntime.o xmvnhgen
 	- rm -f $(cmvntobj) ATL_cmvnk.c atlas_cmvn.h mvnh.bak ATL_cgemvN.o
-	- mv $(INCAdir)/atlas_cmvn.h rmvn.bak
+	- mv $(INCAdir)/atlas_cmvn.h mvnh.bak
 	./xmvnhgen -p c -l $(l1mul) -m $(mu) -n $(nu) -f $(iflag) $(ntlb)
 	cp -f $(MVNKdir)/$(mvnrout) ATL_cmvnk.c
@@ -1076,5 +1076,5 @@
 zmvntime : zmvntime.o xmvnhgen
 	- rm -f $(zmvntobj) ATL_zmvnk.c atlas_zmvn.h mvnh.bak ATL_zgemvN.o
-	- mv $(INCAdir)/atlas_zmvn.h rmvn.bak
+	- mv $(INCAdir)/atlas_zmvn.h mvnh.bak
 	./xmvnhgen -p z -l $(l1mul) -m $(mu) -n $(nu) -f $(iflag) $(ntlb)
 	cp -f $(MVNKdir)/$(mvnrout) ATL_zmvnk.c

--- ATLAS/makes/Make.mmtune
+++ ATLAS/makes/Make.mmtune
@@ -288,7 +288,9 @@
 res/snreg : xgmmsearch
 	./xgmmsearch -p s -r -1
 sRun_tfc : stfc
+	mkdir -p $(MMTdir)/_include
 	$(ATLRUN) $(MMTdir) xstfc
+	cp $(MMTdir)/_include/sXover.h $(INCAdir)
 	cp -f $(INCAdir)/sXover.h res/.
 
 stfc :
@@ -378,7 +380,9 @@
 res/dnreg : xgmmsearch
 	./xgmmsearch -p d -r -1
 dRun_tfc : dtfc
+	mkdir -p $(MMTdir)/_include
 	$(ATLRUN) $(MMTdir) xdtfc
+	cp $(MMTdir)/_include/dXover.h $(INCAdir)
 	cp -f $(INCAdir)/dXover.h res/.
 
 dtfc :
@@ -465,7 +469,9 @@
 res/qnreg : xgmmsearch
 	./xgmmsearch -p q -r -1
 qRun_tfc : qtfc
+	mkdir -p $(MMTdir)/_include
 	$(ATLRUN) $(MMTdir) xqtfc
+	cp $(MMTdir)/_include/qXover.h $(INCAdir)
 	cp -f $(INCAdir)/qXover.h res/.
 
 qtfc :
@@ -552,7 +558,9 @@
 res/cnreg : xgmmsearch
 	./xgmmsearch -p c -r -1
 cRun_tfc : ctfc
+	mkdir -p $(MMTdir)/_include
 	$(ATLRUN) $(MMTdir) xctfc
+	cp $(MMTdir)/_include/cXover.h $(INCAdir)
 	cp -f $(INCAdir)/cXover.h res/.
 
 ctfc :
@@ -639,7 +647,9 @@
 res/znreg : xgmmsearch
 	./xgmmsearch -p z -r -1
 zRun_tfc : ztfc
+	mkdir -p $(MMTdir)/_include
 	$(ATLRUN) $(MMTdir) xztfc
+	cp $(MMTdir)/_include/zXover.h $(INCAdir)
 	cp -f $(INCAdir)/zXover.h res/.
 
 ztfc :
@@ -1553,5 +1563,5 @@
 $(pre)tfc.o : $(mySRCdir)/tfc.c $(INCSdir)/atlas_misc.h $(INCAdir)/$(pre)mm.h \
               $(INCAdir)/atlas_$(pre)sysinfo.h
 	$(ICC) -o $@ -c $(ICCFLAGS) -D$(typ) $(mySRCdir)/tfc.c \
-                 -DSM_FOUT=$(INCAdir)/$(pre)Xover.h
+                 -DSM_FOUT=_include/$(pre)Xover.h
 
